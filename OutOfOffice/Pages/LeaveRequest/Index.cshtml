@page
@model OutOfOffice.Pages.LeaveRequest.IndexModel
@inject Access access;
@using Helpers;

@{
    ViewData["Title"] = "Index";
    var user = (EmployeeModel)ViewData["CurrentUser"];
}

<h1>Index</h1>
@if (access.HasAccess(user, AccessResourceModel.AccessResource.LeaveRequestsCreateAndManage))
{
    <p>
        <a asp-page="Create">Create New</a>
    </p>
}
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            <input hidden type="text" name="sortOrder" value="@Model.CurrentSort" />
            ID
            <input type="text" name="idFilter" value="@Model.IdSearch" />
            Employee
            <input type="text" name="employeeSearch" value="@Model.EmployeeSearch" />
            <input type="submit" value="Search" class="btn btn-primary" />
            @* <a asp-page="./Index">Back to full List</a> *@
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-employeeSearch="@Model.EmployeeSearch" asp-route-sortOrder="@Model.IDSort">
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Employee.Id)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-employeeSearch="@Model.EmployeeSearch" asp-route-sortOrder="@Model.EmployeeSort">
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Employee.FullName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-employeeSearch="@Model.EmployeeSearch" asp-route-sortOrder="@Model.AbsenceReasonSort">
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].AbsenceReason)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-employeeSearch="@Model.EmployeeSearch" asp-route-sortOrder="@Model.StartDateSort">
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].StartDate)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-employeeSearch="@Model.EmployeeSearch" asp-route-sortOrder="@Model.EndDateSort">
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].EndDate)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-employeeSearch="@Model.EmployeeSearch" asp-route-sortOrder="@Model.CommentSort">
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Comment)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-employeeSearch="@Model.EmployeeSearch" asp-route-sortOrder="@Model.StatusSort">
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Status)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.LeaveRequest) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AbsenceReason)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comment)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
                <td>
                <a asp-page="./Details" asp-route-id="@item.ID">Details</a>
                @if (access.HasAccess(user, AccessResourceModel.AccessResource.LeaveRequestsCreateAndManage))
                {
                    @Html.Raw("|")
                    <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a>
                    @if (item.Status == RequestStatus.New)
                    {
                            @Html.Raw("|")
                            <a asp-page="./Edit" asp-page-handler="Update" asp-route-status="@RequestStatus.Submitted" asp-route-id="@item.ID">Submit</a>
                    }
                    @if (item.Status == RequestStatus.New || item.Status == RequestStatus.Submitted)
                    {
                            @Html.Raw("|")
                            <a asp-page="./Edit" asp-page-handler="Update" asp-route-status="@RequestStatus.Cancelled" asp-route-id="@item.ID">Cancel</a>
                    }
                }
            </td>
        </tr>
}
    </tbody>
</table>
