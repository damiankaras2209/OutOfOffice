@page
@model OutOfOffice.Pages.Employee.IndexModel
@inject Helpers.Access access;

@{
    ViewData["Title"] = "Index";
    var user = (EmployeeModel)ViewData["CurrentUser"];
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            <input hidden type="text" name="sortOrder" value="@Model.CurrentSort" />
            ID
            <input type="text" name="idSearch" value="@Model.IdSearch" />
            Full Name
            <input type="text" name="fullNameSearch" value="@Model.FullNameSearch" />
            <input type="submit" value="Search" class="btn btn-primary" />
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-fullNameSearch="@Model.FullNameSearch" asp-route-sortOrder="@Model.IDSort">
                    @Html.DisplayNameFor(model => model.Employee[0].Id)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-fullNameSearch="@Model.FullNameSearch" asp-route-sortOrder="@Model.FullNameSort">
                    @Html.DisplayNameFor(model => model.Employee[0].FullName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-fullNameSearch="@Model.FullNameSearch" asp-route-sortOrder="@Model.SubdivisionSort">
                    @Html.DisplayNameFor(model => model.Employee[0].Subdivision)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-fullNameSearch="@Model.FullNameSearch" asp-route-sortOrder="@Model.PositionSort">
                    @Html.DisplayNameFor(model => model.Employee[0].Position)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-fullNameSearch="@Model.FullNameSearch" asp-route-sortOrder="@Model.StatusSort">
                    @Html.DisplayNameFor(model => model.Employee[0].Status)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-fullNameSearch="@Model.FullNameSearch" asp-route-sortOrder="@Model.PartnerSort">
                    @Html.DisplayNameFor(model => model.Employee[0].PeoplePartner)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-fullNameSearch="@Model.FullNameSearch" asp-route-sortOrder="@Model.BalanceSort">
                    @Html.DisplayNameFor(model => model.Employee[0].Balance)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-idSearch="@Model.IdSearch" asp-route-fullNameSearch="@Model.FullNameSearch" asp-route-sortOrder="@Model.ProjectSort">
                    @Html.DisplayNameFor(model => model.Employee[0].Project)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Employee)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.NID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Subdivision)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Position)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PeoplePartner.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Balance)
            </td>
            <td>
                    @if (item.Project != null)
                    {
                        @Html.Raw(item.Project.ID + "; " + item.Project.ProjectType + "; " + item.Project.StartDate.ToShortDateString() + " - " + item.Project.EndDate.ToShortDateString())
                    }
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                @if (item.Status == Helpers.Status.Active)
                {
                    <a asp-page="./Edit" asp-page-handler="Deactivate" asp-route-id="@item.Id">Deactivate</a>
                }
                else
                {
                    <a asp-page="./Edit" asp-page-handler="Activate" asp-route-id="@item.Id">Activate</a>
                }

                @if (access.HasAccess(user, AccessResourceModel.AccessResource.EmployeesAssignProject))
                {
                    @Html.Raw("|")
                    <a asp-page="./Assign" asp-route-id="@item.Id">Assign project</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>
